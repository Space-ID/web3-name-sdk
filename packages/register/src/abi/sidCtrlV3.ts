export const sidV3CtrlAbi = [
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'DurationTooShort',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'NameNotAvailable',
    type: 'error',
  },
  { inputs: [], name: 'NotQualifiedRegister', type: 'error' },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      { internalType: 'uint256', name: 'realPrice', type: 'uint256' },
    ],
    name: 'SimulateERC20Price',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'realPrice', type: 'uint256' }],
    name: 'SimulatePrice',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      { indexed: false, internalType: 'address', name: 'newAdmin', type: 'address' },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'beacon', type: 'address' }],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'string', name: 'name', type: 'string' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'label',
        type: 'bytes32',
      },
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'baseCost',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'expires', type: 'uint256' },
    ],
    name: 'NameRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'string', name: 'name', type: 'string' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'label',
        type: 'bytes32',
      },
      { indexed: false, internalType: 'uint256', name: 'cost', type: 'uint256' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'expires',
        type: 'uint256',
      },
    ],
    name: 'NameRenewed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'bool', name: 'hasMintCap', type: 'bool' },
    ],
    name: 'SetHasMintCap',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'maxDomainLength', type: 'uint256' },
    ],
    name: 'SetMaxDomainLength',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'minDomainLength', type: 'uint256' },
    ],
    name: 'SetMinDomainLength',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'minRegistrationDuration', type: 'uint256' },
    ],
    name: 'SetMinRegistrationDuration',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'minRenewDuration', type: 'uint256' },
    ],
    name: 'SetMinRenewDuration',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'mintCap', type: 'uint256' },
    ],
    name: 'SetMintCap',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetPointHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetPriceHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetQualificationHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetRenewPointHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetRenewPriceHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetRenewRewardHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'hook', type: 'address' },
    ],
    name: 'SetRewardHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'base', type: 'address' },
    ],
    name: 'SetTldBase',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'priceOracle', type: 'address' },
    ],
    name: 'SetTldPriceOracle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'SetTldPricingToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'available',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'address', name: 'owner', type: 'address' },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
      { internalType: 'address', name: 'resolver', type: 'address' },
      {
        internalType: 'bool',
        name: 'setTldName',
        type: 'bool',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRegister',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'address', name: 'owner', type: 'address' },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
      { internalType: 'address', name: 'resolver', type: 'address' },
      {
        internalType: 'bool',
        name: 'setTldName',
        type: 'bool',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRegisterSimulate',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'address', name: 'owner', type: 'address' },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
      { internalType: 'address', name: 'resolver', type: 'address' },
      {
        internalType: 'bool',
        name: 'setTldName',
        type: 'bool',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRegisterWithERC20',
    outputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      {
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'address', name: 'owner', type: 'address' },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
      { internalType: 'address', name: 'resolver', type: 'address' },
      {
        internalType: 'bool',
        name: 'setTldName',
        type: 'bool',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRegisterWithERC20Simulate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
      {
        internalType: 'bytes[]',
        name: 'extraData',
        type: 'bytes[]',
      },
    ],
    name: 'bulkRenew',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
      {
        internalType: 'address',
        name: 'initiatedBy',
        type: 'address',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRenewSimulate',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
      {
        internalType: 'bytes[]',
        name: 'extraData',
        type: 'bytes[]',
      },
    ],
    name: 'bulkRenewWithERC20',
    outputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      {
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
      {
        internalType: 'address',
        name: 'initiatedBy',
        type: 'address',
      },
      { internalType: 'bytes[]', name: 'extraData', type: 'bytes[]' },
    ],
    name: 'bulkRenewWithERC20Simulate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPriceOracle',
    outputs: [{ internalType: 'contract IPriceOracle', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'erc20PlatformFeeBalances',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'identifier', type: 'uint256' }],
    name: 'getPriceOracle',
    outputs: [{ internalType: 'contract IPriceOracle', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISANN',
        name: '_sann',
        type: 'address',
      },
      {
        internalType: 'contract IPlatformConfig',
        name: '_platformConfig',
        type: 'address',
      },
      {
        internalType: 'contract IPrepaidPlatformFee',
        name: '_prepaidPlatformFee',
        type: 'address',
      },
      {
        internalType: 'contract IPriceOracle',
        name: '_priceOracle',
        type: 'address',
      },
      { internalType: 'contract IReverseRegistrar', name: '_reverseRegistrar', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'platformConfig',
    outputs: [{ internalType: 'contract IPlatformConfig', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'platformFeeBalance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'prepaidPlatformFee',
    outputs: [{ internalType: 'contract IPrepaidPlatformFee', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      { internalType: 'address', name: '_buyer', type: 'address' },
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
      { internalType: 'bytes', name: '_extraData', type: 'bytes' },
    ],
    name: 'priceAfterDiscount',
    outputs: [{ internalType: 'uint256', name: 'cost', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_token', type: 'address' },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
    ],
    name: 'rentERC20Price',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'base',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'premium', type: 'uint256' },
        ],
        internalType: 'struct IPriceOracle.Price',
        name: 'price',
        type: 'tuple',
      },
      { internalType: 'address', name: 'token', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
    ],
    name: 'rentPrice',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'base',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'premium', type: 'uint256' },
        ],
        internalType: 'struct IPriceOracle.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      { internalType: 'uint256', name: 'duration', type: 'uint256' },
    ],
    name: 'rentPriceInUSD',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'base',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'premium', type: 'uint256' },
        ],
        internalType: 'struct IPriceOracle.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reverseRegistrar',
    outputs: [{ internalType: 'contract IReverseRegistrar', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sann',
    outputs: [{ internalType: 'contract ISANN', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: '_maxDomainLength',
        type: 'uint256',
      },
    ],
    name: 'setMaxDomainLength',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: '_minDomainLength',
        type: 'uint256',
      },
    ],
    name: 'setMinDomainLength',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: '_minRegistrationDuration',
        type: 'uint256',
      },
    ],
    name: 'setMinRegistrationDuration',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: '_minRenewDuration',
        type: 'uint256',
      },
    ],
    name: 'setMinRenewDuration',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'uint256',
        name: '_mintCap',
        type: 'uint256',
      },
    ],
    name: 'setMintCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setPointHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setPriceHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setQualificationHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRenewPointHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRenewPriceHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRenewRewardHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRewardHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'identifier',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minDomainLength',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'maxDomainLength', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'minRegistrationDuration',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'minRenewDuration', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'mintCap',
            type: 'uint256',
          },
        ],
        internalType: 'struct TldConfig',
        name: '_config',
        type: 'tuple',
      },
    ],
    name: 'setTldConfigs',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: '_qualificationHook',
        type: 'address',
      },
      { internalType: 'address', name: '_priceHook', type: 'address' },
      {
        internalType: 'address',
        name: '_rewardHook',
        type: 'address',
      },
      { internalType: 'address', name: '_renewPriceHook', type: 'address' },
      {
        internalType: 'address',
        name: '_renewRewardHook',
        type: 'address',
      },
    ],
    name: 'setTldHooks',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: 'priceOracle',
        type: 'address',
      },
    ],
    name: 'setTldPriceOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'setTldPricingToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldConfigs',
    outputs: [
      {
        internalType: 'uint256',
        name: 'minDomainLength',
        type: 'uint256',
      },
      { internalType: 'uint256', name: 'maxDomainLength', type: 'uint256' },
      {
        internalType: 'uint256',
        name: 'minRegistrationDuration',
        type: 'uint256',
      },
      { internalType: 'uint256', name: 'minRenewDuration', type: 'uint256' },
      {
        internalType: 'uint256',
        name: 'mintCap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldERC20Revenues',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldHooks',
    outputs: [
      {
        internalType: 'contract IQualificationHook',
        name: 'qualificationHook',
        type: 'address',
      },
      {
        internalType: 'contract IPriceHook',
        name: 'priceHook',
        type: 'address',
      },
      {
        internalType: 'contract IPointHook',
        name: 'pointHook',
        type: 'address',
      },
      {
        internalType: 'contract IRewardHook',
        name: 'rewardHook',
        type: 'address',
      },
      {
        internalType: 'contract IRenewPriceHook',
        name: 'renewPriceHook',
        type: 'address',
      },
      {
        internalType: 'contract IRenewPointHook',
        name: 'renewPointHook',
        type: 'address',
      },
      { internalType: 'contract IRenewRewardHook', name: 'renewRewardHook', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldPriceOracles',
    outputs: [{ internalType: 'contract IPriceOracle', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldPricingTokens',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldRevenues',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newImplementation', type: 'address' }],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'identifier', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'identifier', type: 'uint256' }],
    name: 'withdrawERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'withdrawERC20PlatformFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawPlatformFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

export const sidV3ResolverAbi = [
  {
    inputs: [
      { internalType: 'contract SidRegistry', name: '_sidRegistry', type: 'address' },
      { internalType: 'address', name: '_trustedController', type: 'address' },
      { internalType: 'uint256', name: 'chainType', type: 'uint256' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: true, internalType: 'uint256', name: 'contentType', type: 'uint256' },
    ],
    name: 'ABIChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'address', name: 'a', type: 'address' },
    ],
    name: 'AddrChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'uint256', name: 'coinType', type: 'uint256' },
      { indexed: false, internalType: 'bytes', name: 'newAddress', type: 'bytes' },
    ],
    name: 'AddressChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'bytes', name: 'hash', type: 'bytes' },
    ],
    name: 'ContenthashChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: true, internalType: 'bytes4', name: 'interfaceID', type: 'bytes4' },
      { indexed: false, internalType: 'address', name: 'implementer', type: 'address' },
    ],
    name: 'InterfaceChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'string', name: 'name', type: 'string' },
    ],
    name: 'NameChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'bytes32', name: 'x', type: 'bytes32' },
      { indexed: false, internalType: 'bytes32', name: 'y', type: 'bytes32' },
    ],
    name: 'PubkeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: true, internalType: 'string', name: 'indexedKey', type: 'string' },
      { indexed: false, internalType: 'string', name: 'key', type: 'string' },
      { indexed: false, internalType: 'string', name: 'value', type: 'string' },
    ],
    name: 'TextChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { indexed: false, internalType: 'string', name: 'name', type: 'string' },
    ],
    name: 'TldNameChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { indexed: false, internalType: 'uint64', name: 'newVersion', type: 'uint64' },
    ],
    name: 'VersionChanged',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'contentTypes', type: 'uint256' },
    ],
    name: 'ABI',
    outputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'node', type: 'bytes32' }],
    name: 'addr',
    outputs: [{ internalType: 'address payable', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'coinType', type: 'uint256' },
    ],
    name: 'addr',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'node', type: 'bytes32' }],
    name: 'clearRecords',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'node', type: 'bytes32' }],
    name: 'contenthash',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultCoinType',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'bytes4', name: 'interfaceID', type: 'bytes4' },
    ],
    name: 'interfaceImplementer',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'address', name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes[]', name: 'data', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ internalType: 'bytes[]', name: 'results', type: 'bytes[]' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'node', type: 'bytes32' }],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'node', type: 'bytes32' }],
    name: 'pubkey',
    outputs: [
      { internalType: 'bytes32', name: 'x', type: 'bytes32' },
      { internalType: 'bytes32', name: 'y', type: 'bytes32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    name: 'recordVersions',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'controller', type: 'address' }],
    name: 'removeTrustedController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'contentType', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'setABI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'coinType', type: 'uint256' },
      { internalType: 'bytes', name: 'a', type: 'bytes' },
    ],
    name: 'setAddr',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'address', name: 'a', type: 'address' },
    ],
    name: 'setAddr',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'bytes', name: 'hash', type: 'bytes' },
    ],
    name: 'setContenthash',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'bytes4', name: 'interfaceID', type: 'bytes4' },
      { internalType: 'address', name: 'implementer', type: 'address' },
    ],
    name: 'setInterface',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'string', name: 'newName', type: 'string' },
    ],
    name: 'setName',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newController', type: 'address' }],
    name: 'setNewTrustedController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'bytes32', name: 'x', type: 'bytes32' },
      { internalType: 'bytes32', name: 'y', type: 'bytes32' },
    ],
    name: 'setPubkey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'string', name: 'key', type: 'string' },
      { internalType: 'string', name: 'value', type: 'string' },
    ],
    name: 'setText',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'string', name: 'newName', type: 'string' },
    ],
    name: 'setTldName',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceID', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'string', name: 'key', type: 'string' },
    ],
    name: 'text',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'node', type: 'bytes32' },
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
    ],
    name: 'tldName',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: '', type: 'bytes32' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'tldNames',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

export const sidV3ReverseRegistrarAbi = [
  {
    inputs: [{ internalType: 'contract SidRegistry', name: 'sidAddr', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'controller', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'enabled', type: 'bool' },
    ],
    name: 'ControllerChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'addr', type: 'address' },
      { indexed: true, internalType: 'bytes32', name: 'node', type: 'bytes32' },
    ],
    name: 'ReverseClaimed',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'claim',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'addr', type: 'address' },
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'resolver', type: 'address' },
    ],
    name: 'claimForAddr',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'resolver', type: 'address' },
    ],
    name: 'claimWithResolver',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'controllers',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultResolver',
    outputs: [{ internalType: 'contract ReverseResolver', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],
    name: 'node',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'addr', type: 'address' },
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'resolver', type: 'address' },
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'string', name: 'tldName', type: 'string' },
    ],
    name: 'setAllNamesForAddr',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'controller', type: 'address' },
      { internalType: 'bool', name: 'enabled', type: 'bool' },
    ],
    name: 'setController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'resolver', type: 'address' }],
    name: 'setDefaultResolver',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: 'name', type: 'string' }],
    name: 'setName',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'addr', type: 'address' },
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'resolver', type: 'address' },
      { internalType: 'string', name: 'name', type: 'string' },
    ],
    name: 'setNameForAddr',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'string', name: 'name', type: 'string' },
    ],
    name: 'setTldName',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'addr', type: 'address' },
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'resolver', type: 'address' },
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'string', name: 'name', type: 'string' },
    ],
    name: 'setTldNameForAddr',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sid',
    outputs: [{ internalType: 'contract SidRegistry', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

export const sidV3GiftcardControllerAbi = [
  {
    inputs: [
      { internalType: 'contract ISANN', name: '_sann', type: 'address' },
      { internalType: 'contract GiftCardBase', name: '_base', type: 'address' },
      { internalType: 'contract GiftCardVoucher', name: '_voucher', type: 'address' },
      { internalType: 'contract GiftCardLedger', name: '_ledger', type: 'address' },
      { internalType: 'contract IPriceOracle', name: '_priceOracle', type: 'address' },
      { internalType: 'contract IPlatformConfig', name: '_platformConfig', type: 'address' },
      { internalType: 'contract PrepaidPlatformFee', name: '_prepaidPlatformFee', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'base',
    outputs: [{ internalType: 'contract GiftCardBase', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    name: 'batchRedeem',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    name: 'batchRegister',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ledger',
    outputs: [{ internalType: 'contract GiftCardLedger', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'platformConfig',
    outputs: [{ internalType: 'contract IPlatformConfig', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'prepaidPlatformFee',
    outputs: [{ internalType: 'contract PrepaidPlatformFee', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    name: 'price',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'priceOracle',
    outputs: [{ internalType: 'contract IPriceOracle', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sann',
    outputs: [{ internalType: 'contract ISANN', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_priceOracle', type: 'address' }],
    name: 'setPriceOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tldGiftCardRevenues',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'voucher',
    outputs: [{ internalType: 'contract GiftCardVoucher', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'identifier', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export const sidV3GiftcardLedgerAbi = [
  {
    inputs: [{ internalType: 'contract ISANN', name: '_sann', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'controller', type: 'address' }],
    name: 'ControllerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'controller', type: 'address' }],
    name: 'ControllerRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'address', name: 'controller', type: 'address' }],
    name: 'addController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'balances',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'controllers',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'deduct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'redeem',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'controller', type: 'address' }],
    name: 'removeController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sann',
    outputs: [{ internalType: 'contract ISANN', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export const sidV3ReferralAbi = [
  {
    inputs: [{ internalType: 'contract ISANN', name: '_sann', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'tld', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'controller', type: 'address' },
    ],
    name: 'ControllerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'tld', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'controller', type: 'address' },
    ],
    name: 'ControllerRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'tld', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'addr', type: 'address' },
    ],
    name: 'NewReferralRecord',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'addr', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'depositRecord',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'addr', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'withdrawRecord',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_identifier', type: 'uint256' },
      { internalType: 'string', name: '_name', type: 'string' },
      { internalType: 'address', name: '_buyer', type: 'address' },
      { internalType: 'uint256', name: '_duration', type: 'uint256' },
      { internalType: 'uint256', name: '_cost', type: 'uint256' },
      { internalType: 'uint256', name: '_revenue', type: 'uint256' },
      { internalType: 'uint256', name: '_platformFee', type: 'uint256' },
      { internalType: 'bytes', name: '_extraData', type: 'bytes' },
    ],
    name: 'calcReward',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'rewardReceiver', type: 'address' },
          { internalType: 'uint256', name: 'rewardAmount', type: 'uint256' },
        ],
        internalType: 'struct IRewardHook.Reward[]',
        name: 'rewards',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'comissionCharts',
    outputs: [
      { internalType: 'uint256', name: 'minimumReferralCount', type: 'uint256' },
      { internalType: 'uint256', name: 'referrerRate', type: 'uint256' },
      { internalType: 'uint256', name: 'refereeRate', type: 'uint256' },
      { internalType: 'bool', name: 'isValid', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'controllers',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'uint256', name: 'price', type: 'uint256' },
      { internalType: 'address', name: 'addr', type: 'address' },
    ],
    name: 'getReferralCommisionFee',
    outputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'address', name: 'addr', type: 'address' },
    ],
    name: 'getReferralDetails',
    outputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'referralBalance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'referralCounts',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_identifier', type: 'uint256' },
      { internalType: 'string', name: '_name', type: 'string' },
      { internalType: 'address', name: '_buyer', type: 'address' },
      { internalType: 'uint256', name: '_duration', type: 'uint256' },
      { internalType: 'uint256', name: '_cost', type: 'uint256' },
      { internalType: 'uint256', name: '_revenue', type: 'uint256' },
      { internalType: 'uint256', name: '_platformFee', type: 'uint256' },
      { internalType: 'bytes', name: '_extraData', type: 'bytes' },
    ],
    name: 'reward',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sann',
    outputs: [{ internalType: 'contract ISANN', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'identifier', type: 'uint256' },
      { internalType: 'uint256', name: 'level', type: 'uint256' },
      { internalType: 'uint256', name: 'minimumCount', type: 'uint256' },
      { internalType: 'uint256', name: 'referrerRate', type: 'uint256' },
      { internalType: 'uint256', name: 'refereeRate', type: 'uint256' },
    ],
    name: 'setComissionChart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },
]
